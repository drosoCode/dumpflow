// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.13.0

package database

import (
	"time"
)

type Badge struct {
	ID       int64     `json:"id"`
	UserID   int64     `json:"userID"`
	Name     string    `json:"name"`
	Date     time.Time `json:"date"`
	Class    int32     `json:"class"`
	TagBased bool      `json:"tagBased"`
}

type Comment struct {
	ID             int64     `json:"id"`
	PostID         int64     `json:"postID"`
	Score          int32     `json:"score"`
	Text           string    `json:"text"`
	CreationDate   time.Time `json:"creationDate"`
	UserID         int64     `json:"userID"`
	ContentLicense string    `json:"contentLicense"`
}

type Post struct {
	ID               int64     `json:"id"`
	PostTypeID       int32     `json:"postTypeID"`
	ParentID         int64     `json:"parentID"`
	AcceptedAnswerID int32     `json:"acceptedAnswerID"`
	CreationDate     time.Time `json:"creationDate"`
	ClosedDate       time.Time `json:"closedDate"`
	Score            int32     `json:"score"`
	ViewCount        int32     `json:"viewCount"`
	Body             string    `json:"body"`
	Tags             string    `json:"tags"`
	AnswerCount      int32     `json:"answerCount"`
	CommentCount     int32     `json:"commentCount"`
	FavoriteCount    int32     `json:"favoriteCount"`
	ContentLicense   string    `json:"contentLicense"`
}

type PostHistory struct {
	ID                int64     `json:"id"`
	PostHistoryTypeID int32     `json:"postHistoryTypeID"`
	PostID            int64     `json:"postID"`
	RevisionGuid      string    `json:"revisionGuid"`
	CreationDate      time.Time `json:"creationDate"`
	UserID            int64     `json:"userID"`
	Comment           string    `json:"comment"`
	Text              string    `json:"text"`
	ContentLicense    string    `json:"contentLicense"`
}

type PostLink struct {
	ID            int64     `json:"id"`
	CreationDate  time.Time `json:"creationDate"`
	PostID        int64     `json:"postID"`
	RelatedPostID int64     `json:"relatedPostID"`
	LinkTypeID    int32     `json:"linkTypeID"`
}

type Tag struct {
	ID              int64  `json:"id"`
	TagName         string `json:"tagName"`
	Count           int32  `json:"count"`
	IsRequired      bool   `json:"isRequired"`
	IsModeratorOnly bool   `json:"isModeratorOnly"`
	WikiPostID      int32  `json:"wikiPostID"`
	ExcerptPostID   int32  `json:"excerptPostID"`
}

type User struct {
	ID              int64     `json:"id"`
	Reputation      int32     `json:"reputation"`
	CreationDate    time.Time `json:"creationDate"`
	DisplayName     string    `json:"displayName"`
	LastAccessDate  time.Time `json:"lastAccessDate"`
	Location        string    `json:"location"`
	WebsiteUrl      string    `json:"websiteUrl"`
	AboutMe         string    `json:"aboutMe"`
	Views           int32     `json:"views"`
	Upvotes         int32     `json:"upvotes"`
	Downvotes       int32     `json:"downvotes"`
	AccountID       int64     `json:"accountID"`
	ProfileImageUrl string    `json:"profileImageUrl"`
}

type Vote struct {
	ID           int64     `json:"id"`
	PostID       int64     `json:"postID"`
	VoteTypeID   int32     `json:"voteTypeID"`
	CreationDate time.Time `json:"creationDate"`
}
